{"version":3,"sources":["assets/images/recent/freelance.jpg","assets/images/recent/img1.jpg","assets/images/recent/img3.png","assets/images/recent/man.jpg","assets/images/img.png","assets/images/gallery/doggo.jpg","assets/images/gallery/img2.jpg","assets/images/gallery/mj.png","components/Navbar.js","components/Intro.js","components/RecentWork.js","components/Gallery.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","Intro","src","img","alt","style","fontSize","RecentWork","useState","freelance","img1","img3","man","ImgSource","id","map","item","index","key","Gallery","doggo","img2","mj","Footer","href","target","rel","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,0CCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,gC,iNCkB5BC,G,MAfA,WACb,OACE,yBAAKC,UAAU,SACb,yBAAKA,UAAU,mEACb,gCACE,kBAAC,IAAD,CAASC,GAAG,KAAZ,SAEF,gCACE,kBAAC,IAAD,CAASA,GAAG,SAAZ,gB,yBCgCKC,EAxCD,WACZ,OACE,yBAAKF,UAAU,aACb,yBAAKA,UAAU,wBACb,6BACE,yBAAKA,UAAU,eACb,yBAAKG,IAAKC,IAAKC,IAAI,MAErB,yBAAKL,UAAU,QACb,0CACA,uBAAGA,UAAU,QAAb,oBACA,uBAAGM,MAAO,CAAEC,SAAU,WAAtB,8BAIN,yBAAKP,UAAU,mCACb,yBAAKA,UAAU,WACb,mCACA,gMAKA,yKAOJ,yBAAKA,UAAU,mCACb,0K,mFCVOQ,EAhBI,WAAO,IAAD,EACHC,mBAAS,CAACC,IAAWC,IAAMC,IAAMC,MAA9CC,EADgB,oBAEvB,OACE,yBAAKC,GAAG,OAAOf,UAAU,cACvB,4CACA,yBAAKA,UAAU,cACZc,EAAUE,KAAI,SAACC,EAAMC,GAAP,OACb,yBAAKlB,UAAU,cAAcmB,IAAKD,GAChC,yBAAKf,IAAKc,EAAMZ,IAAI,Y,mDCWjBe,EAhBC,WAAO,IAAD,EACAX,mBAAS,CAACC,IAAWC,IAAMC,IAAMC,IAAKQ,IAAOC,IAAMC,MAAhET,EADa,oBAEpB,OACE,yBAAKC,GAAG,OAAOf,UAAU,cACvB,wBAAIA,UAAU,QAAd,YACA,yBAAKA,UAAU,cACZc,EAAUE,KAAI,SAACC,EAAMC,GAAP,OACb,yBAAKlB,UAAU,cAAcmB,IAAKD,GAChC,yBAAKf,IAAKc,EAAMZ,IAAI,YCmBjBmB,G,MApCA,WACb,OACE,yBAAKxB,UAAU,mBACb,yBAAKA,UAAU,4CACb,gCACE,uBACEyB,KAAK,4CACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAG3B,UAAU,qBAGjB,gCACE,uBACEyB,KAAK,uCACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAG3B,UAAU,sBAGjB,gCACE,uBACEyB,KAAK,gCACLC,OAAO,SACPC,IAAI,uBAEJ,uBAAG3B,UAAU,yBCJV4B,EAlBH,WACV,OACE,kBAAC,IAAD,KACE,yBAAK5B,UAAU,mBACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QAAQC,UAAWX,IAE/B,kBAAC,EAAD,SCRYY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.63c45888.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/freelance.5364b187.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1.7dea072e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.3b5e97b5.png\";","module.exports = __webpack_public_path__ + \"static/media/man.af56a921.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img.b543d6a4.png\";","module.exports = __webpack_public_path__ + \"static/media/doggo.93fbea6b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.fe8c85c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mj.23272ea4.png\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"../../src/styles/navbar.css\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"links\">\r\n      <div className=\"text-right d-flex justify-content-md-end justify-content-center\">\r\n        <button>\r\n          <NavLink to=\"/\">Home</NavLink>\r\n        </button>\r\n        <button>\r\n          <NavLink to=\"/work\">My Work</NavLink>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../../src/styles/intro.css\";\r\nimport img from \"../../src/assets/images/img.png\";\r\nconst Intro = () => {\r\n  return (\r\n    <div className=\"row intro\">\r\n      <div className=\"col-md-3 text-center\">\r\n        <div>\r\n          <div className=\"img-wrapper\">\r\n            <img src={img} alt=\"\" />\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <h4>Atul Kumar</h4>\r\n            <p className=\"mb-1\">Graphic Designer</p>\r\n            <p style={{ fontSize: \"0.9rem\" }}>atulkumar3113@gmail.com</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-5 d-flex align-items-end\">\r\n        <div className=\"details\">\r\n          <h1>Hi,</h1>\r\n          <p>\r\n            Welcome Lorem ipsum, or lipsum as it is sometimes known, is dummy\r\n            text used in laying out print, graphic or web designs. The passage\r\n            is attributed to an unknown.\r\n          </p>\r\n          <p>\r\n            lipsum as it is sometimes known, is dummy text used in laying out\r\n            print, graphic or web designs. The passage is attributed to an\r\n            unknown\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-4 d-flex align-items-end\">\r\n        <p>\r\n          lipsum as it is sometimes known, is dummy text used in laying out\r\n          print, graphic or web designs. The passage is attributed to an unknown\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/work.css\";\r\n\r\nimport freelance from \"../assets/images/recent/freelance.jpg\";\r\nimport img1 from \"../assets/images/recent/img1.jpg\";\r\nimport img3 from \"../assets/images/recent/img3.png\";\r\nimport man from \"../assets/images/recent/man.jpg\";\r\n\r\nconst RecentWork = () => {\r\n  const [ImgSource] = useState([freelance, img1, img3, man]);\r\n  return (\r\n    <div id=\"work\" className=\"recentWork\">\r\n      <h6>Recent Works</h6>\r\n      <div className=\"gridLayout\">\r\n        {ImgSource.map((item, index) => (\r\n          <div className=\"img-wrapper\" key={index}>\r\n            <img src={item} alt=\"\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentWork;\r\n","import React, { useState } from \"react\";\r\nimport \"../styles/work.css\";\r\nimport freelance from \"../assets/images/recent/freelance.jpg\";\r\nimport img1 from \"../assets/images/recent/img1.jpg\";\r\nimport img3 from \"../assets/images/recent/img3.png\";\r\nimport man from \"../assets/images/recent/man.jpg\";\r\n// gallery images\r\nimport doggo from \"../assets/images/gallery/doggo.jpg\";\r\nimport img2 from \"../assets/images/gallery/img2.jpg\";\r\nimport mj from \"../assets/images/gallery/mj.png\";\r\n\r\nconst Gallery = () => {\r\n  const [ImgSource] = useState([freelance, img1, img3, man, doggo, img2, mj]);\r\n  return (\r\n    <div id=\"work\" className=\"recentWork\">\r\n      <h6 className=\"mt-4\">My Works</h6>\r\n      <div className=\"gridLayout\">\r\n        {ImgSource.map((item, index) => (\r\n          <div className=\"img-wrapper\" key={index}>\r\n            <img src={item} alt=\"\" />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport \"../../src/styles/footer.css\";\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footerLinks m-4\">\r\n      <div className=\"text-right d-flex justify-content-center\">\r\n        <button>\r\n          <a\r\n            href=\"https://www.facebook.com/kumar.atul.18400\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <i className=\"fa fa-facebook\"></i>\r\n          </a>\r\n        </button>\r\n        <button>\r\n          <a\r\n            href=\"https://www.instagram.com/Kumarak20/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <i className=\"fa fa-instagram\"></i>\r\n          </a>\r\n        </button>\r\n        <button>\r\n          <a\r\n            href=\"https://dribbble.com/imAtul20\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <i className=\"fa fa-dribbble\"></i>\r\n          </a>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Intro from \"./components/Intro\";\r\nimport RecentWork from \"./components/RecentWork\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"container-fluid\">\r\n        <Navbar />\r\n\r\n        <Route exact path=\"/\">\r\n          <Intro />\r\n          <RecentWork />\r\n        </Route>\r\n        <Route path=\"/work\" component={Gallery} />\r\n\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../src/styles/main.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}